version: '3'

services:


  postgres:
    image: postgres:14
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5444:5432
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data
#      - POSTGRES_USER=postgres


  mongodb:
    image: mongo
    env_file:
      - .env
    restart: always
    volumes:
      - mongo_data:/data/db
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27019:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8087:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    depends_on:
      - mongodb

  consumer:
    build: docker/consumer
#    command: sleep 600
    command: python main.py
    volumes:
      - ./docker/consumer/src:/app/src
      - ./docker/consumer/log:/app/log
      - ./docker/consumer/entrypoint.sh:/app/entrypoint.sh
    restart: always
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=y
    depends_on:
      - kafka
      - mongodb

  producer:
    build: docker/producer
    command: python main.py
    volumes:
      - ./docker/producer/src:/app/src
      - ./docker/producer/log:/app/log
    restart: always
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=y
    depends_on:
      - kafka


volumes:
#  kafka_data: {}
  pg_data: {}
  mongo_data: {}

