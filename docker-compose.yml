version: '3'

services:

  postgres:
    image: postgres:14
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5444:5432
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data

  mongodb:
    image: mongo
    env_file:
      - .env
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - 27019:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8087:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb

  manager:
    build: docker/manager
    command: python main.py
    volumes:
      - ./docker/manager/src:/app/src
    ports:
      - ${MANAGER_RESTAPI_PORT}:${MANAGER_RESTAPI_PORT}
    restart: always
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=y
    depends_on:
      - kafka
      - mongodb

  consumer:
    build: docker/consumer
    command: >
      sh -c "/wait-for-it.sh --timeout=10 -s manager:8080 &&
             python main.py"
    volumes:
      - ./docker/consumer/src:/app/src
      - ./docker/consumer/log:/app/log
      - ./docker/wait-for-it.sh:/wait-for-it.sh
    restart: always
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=y
    depends_on:
      - manager

  processor:
    build: docker/processor
    command: python main.py
    volumes:
      - ./docker/processor/src:/app/src
      - ./docker/processor/log:/app/log
    restart: always
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=y
    depends_on:
      - kafka


volumes:
#  kafka_data: {}
  pg_data: {}
  mongo_data: {}

