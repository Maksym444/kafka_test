version: '3'

services:
#  kafka:
#    image: bitnami/kafka
#    restart: always
#    hostname: kafka
#    ports:
#         - '9092:9092'
##    volumes:
##      - kafka_data:/bitnami/kafka
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_ADVERTISED_PORT=9092
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#    depends_on:
#      - zookeeper
#
#  zookeeper:
#    image: bitnami/zookeeper
#    restart: always
#    hostname: zookeeper
#    ports:
#         - '2181:2181'
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: lensesio/box:latest
    ports:
         - '3030:3030'
         - '9092:9092'
    environment:
      - EULA=https://licenses.lenses.io/d/?id=df5fd7c3-01af-11ed-a0bc-42010af01003
#      - ADV_HOST=127.0.0.1
      - ADV_HOST=kafka

  producer:
    build: docker/producer
#    command: python src/main.py
    command: python main.py
    volumes:
      - ./docker/producer/src:/app/src
    restart: always
    depends_on:
      - kafka
    environment:
      - PYTHONUNBUFFERED=y

  consumer:
    build: docker/consumer
#    command: python src/main.py
    command: python main.py
    volumes:
      - ./docker/consumer/src:/app/src
    restart: always
    depends_on:
      - kafka
    environment:
      - PYTHONUNBUFFERED=y

#volumes:
#  kafka_data: {}

